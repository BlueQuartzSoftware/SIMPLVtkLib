
# set project's name
project(SIMPLVtkLib)

set(SIMPLVtkLib_BUILT_AS_DYNAMIC_LIB 0)
if(BUILD_SHARED_LIBS)
  set(SIMPLVtkLib_BUILT_AS_DYNAMIC_LIB 1)
  message("Defined SIMPLVtkLib_BUILT_AS_DYNAMIC_LIB")
endif(BUILD_SHARED_LIBS)

set(PROJECT_PREFIX "SIMPVtkLib" CACHE STRING "The Prefix to be used for Preprocessor definitions")

#-------------------------------------------------------------------------------
# Include the cmp project to perform all the basic configuration tests for the
# project.
#-------------------------------------------------------------------------------
set(CMP_HEADER_DIR ${${PROJECT_NAME}_BINARY_DIR})
set(CMP_CONFIGURATION_FILE_NAME "${PROJECT_NAME}Configuration.h")
set(CMP_TYPES_FILE_NAME "${PROJECT_NAME}Types.h")
set(CMP_VERSION_HEADER_FILE_NAME "${PROJECT_NAME}Version.h")
set(CMP_VERSION_SOURCE_FILE_NAME "${PROJECT_NAME}Version.cpp")
set(CMP_TOP_HEADER_FILE "${PROJECT_NAME}.h")
set(CMP_PROJECT_NAMESPACE "${PROJECT_NAME}")
set(CMP_PROJECT_NAME "${PROJECT_NAME}")
set(CMP_ENABLE_PLUGINS "0")
set(CMP_LIB_SEARCH_DIRS "")
set(CMP_GENERATE_VERSION_STRING 1)
set(PROJECT_INSTALL_HEADERS "${CMP_PROJECT_INSTALL_HEADERS}")

set(SIMPLib_FILTER_DOC_DIR ${SIMPLib_SOURCE_DIR}/Documentation/${PROJECT_NAME}Filters)

include(${CMP_SOURCE_DIR}/cmpProject.cmake)

#-- Configure Target Specific configuration file
cmpConfigureFileWithMD5Check(CONFIGURED_TEMPLATE_PATH ${SIMPLVtkLib_SOURCE_DIR}/SIMPLVtkLibConfiguration.h.in
                             GENERATED_FILE_PATH ${SIMPLVtkLib_BINARY_DIR}/${CMP_TOP_HEADER_FILE})

cmp_IDE_GENERATED_PROPERTIES("Generated"
                             "${CMP_HEADER_DIR}/${CMP_TOP_HEADER_FILE};${CMP_HEADER_DIR}/${CMP_TYPES_FILE_NAME};${CMP_HEADER_DIR}/${CMP_CONFIGURATION_FILE_NAME};${CMP_HEADER_DIR}/${CMP_VERSION_HEADER_FILE_NAME}"
                             "${CMP_HEADER_DIR}/${CMP_VERSION_SOURCE_FILE_NAME}")

set(${PROJECT_NAME}_Generated_SRCS
        ${CMP_HEADER_DIR}/${CMP_VERSION_SOURCE_FILE_NAME}
)

include(${${PROJECT_NAME}_SOURCE_DIR}/QtWidgets/SourceList.cmake)
include(${${PROJECT_NAME}_SOURCE_DIR}/SIMPLBridge/SourceList.cmake)
include(${${PROJECT_NAME}_SOURCE_DIR}/Visualization/SourceList.cmake)

set(${PROJECT_NAME}_SRCS
  ${${PROJECT_NAME}_Generated_SRCS}
  
  ${VS_SIMPLBridge_HDRS}
  ${VS_SIMPLBridge_SRCS}
  
  ${VS_VisualFilters_SRCS}
  ${VS_VisualFilters_HDRS}
  ${VS_VisualFilters_UIS}
  ${${PROJECT_NAME}_VisualFilters_Generated_UI_HDRS}

  ${${PROJECT_NAME}_VtkWidget_HDRS}
  ${${PROJECT_NAME}_VtkWidget_SRCS}
  ${${PROJECT_NAME}_VtkWidget_Generated_UI_HDRS}

  ${${PROJECT_NAME}_Visualization_Controllers_HDRS}
  ${${PROJECT_NAME}_Visualization_Controllers_SRCS}
)

# include_directories(${${PROJECT_NAME}_SOURCE_DIR})

# add_library(${PROJECT_NAME} SHARED ${${PROJECT_NAME}_SRCS})

#-- Add a library for the SIMPLib Code
add_library(${PROJECT_NAME} ${LIB_TYPE} ${${PROJECT_NAME}_SRCS})
CMP_AddDefinitions(TARGET ${PROJECT_NAME})
#-- Configure Link Libraries for the Target
LibraryProperties( ${PROJECT_NAME} ${EXE_DEBUG_EXTENSION} )

# --------------------------------------------------------------------
# Look for Vtk 8.0 as we need it for the plugin GUI to be generated
# These are the required component libraries
set(VtkComponents
    vtkGUISupportQt
    vtkRenderingCore
    vtkRenderingFreeType
    vtkRenderingOpenGL2
    vtkRenderingVolumeOpenGL2
    vtkRenderingContextOpenGL2
    vtkRenderingAnnotation
    vtkInteractionWidgets
    vtkInteractionStyle
    vtkIOLegacy
    vtkIOImage
    vtkIOGeometry
    vtkChartsCore
    vtkViewsContext2D
  )

include("${CMP_SOURCE_DIR}/ExtLib/VtkSupport.cmake")
CMP_FindVtkComponents(QT5_REQUIRED TRUE
                      COMPONENTS ${VtkComponents}
                      )

target_link_libraries(${PROJECT_NAME}
                    Qt5::Core
                    SIMPLib
                    Qt5::Gui
                    Qt5::Widgets
                    )

set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER ${PROJECT_NAME})

#-- Configure Target Installation Rules
set(install_dir "tools")
set(lib_install_dir "lib")

if(APPLE)
  get_property(DREAM3D_PACKAGE_DEST_PREFIX GLOBAL PROPERTY DREAM3D_PACKAGE_DEST_PREFIX)
  set(install_dir "${DREAM3D_PACKAGE_DEST_PREFIX}bin")
  set(lib_install_dir "${DREAM3D_PACKAGE_DEST_PREFIX}lib")
elseif(WIN32)
  set(install_dir ".")
  set(lib_install_dir ".")
endif()

if(WIN32 AND BUILD_SHARED_LIBS)
    target_compile_definitions(SIMPLVtkLib PUBLIC "-DSIMPLVtkLib_BUILT_AS_DYNAMIC_LIB")
endif()

if(BUILD_SHARED_LIBS AND NOT APPLE)
    INSTALL(TARGETS ${PROJECT_NAME}
        COMPONENT Applications
        RUNTIME DESTINATION ${install_dir}
        LIBRARY DESTINATION ${lib_install_dir}
        ARCHIVE DESTINATION ${lib_install_dir}
        BUNDLE DESTINATION "."
    )
endif()